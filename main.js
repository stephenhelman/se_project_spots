!function(){"use strict";var e="";const t=(e,t,r)=>{const o=e.querySelector(`.${t.id}-error`),{inputErrorClass:a,errorClass:n}=r;t.classList.remove(a),o.classList.remove(n),o.textContent=""},r=(e,t)=>{e.classList.add(t),e.disabled=!0},o=(e,t)=>{e.classList.remove(t),e.disabled=!1},a=(e,t,a)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,a):o(t,a)},n=e=>{const{formSelector:r,fieldsetSelector:o}=e;Array.from(document.querySelectorAll(r)).forEach((r=>{r.addEventListener("submit",(function(e){e.preventDefault()})),Array.from(r.querySelectorAll(o)).forEach((r=>{((e,r)=>{const{inputSelector:o,submitButtonSelector:n,inactiveButtonClass:i}=r,d=Array.from(e.querySelectorAll(o)),l=e.querySelector(n);a(d,l,i),d.forEach((o=>{o.addEventListener("input",(()=>{((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const a=e.querySelector(`.${t.id}-error`),{inputErrorClass:n,errorClass:i}=o;t.classList.add(n),a.textContent=r,a.classList.add(i)})(e,r,r.validationMessage,o)})(e,o,r),a(d,l,i)}))}))})(r,e)}))}))},i={formSelector:".modal__form",fieldsetSelector:".modal__fieldset",inputSelector:".modal__input",submitButtonSelector:".modal__form-submit",inactiveButtonClass:"modal__form-submit_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"};n(i);var d=e+"8650253b58b46f0f1c06.svg",l=e+"5c2584faa41177b41691.svg",s=e+"40608da7369d39bc1077.svg",u=e+"d73f076c46eb5467f5fc.svg";const c=(()=>{const e=document.querySelector("#delete-confirmation-modal"),t=document.forms["delete-confirmation"],r=t.querySelector(".modal__form-submit");return{deleteCardModal:e,deleteCardForm:t,deleteCardSubmitButton:r}})(),m={cardsContainer:document.querySelector(".cards__list"),cardTemplate:document.querySelector("#card-template")},p=(()=>{const e=document.querySelector("#preview-modal"),t=e.querySelector(".modal__image"),r=e.querySelector(".modal__caption");return{previewModal:e,modalImage:t,modalCaption:r}})(),_=(e,t)=>{y(e.name,t.profileNameElement),y(e.about,t.profileJobElement)},v=(e,t,r,o="prepend")=>{const a=g(e,r);t[o](a)},f=e=>{e.classList.add("modal_is-opened"),document.addEventListener("keydown",h)},S=e=>{e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",h)},h=e=>{if("Escape"===e.key){const e=document.querySelector(".modal_is-opened");S(e)}},b=(e,t)=>{t.value=e},y=(e,t)=>{t.textContent=e},q=(e,t)=>{e.setAttribute("src",t.link),e.setAttribute("alt",t.name)};let E,C;const g=(e,t)=>{const r=m.cardTemplate.content.querySelector(".card").cloneNode(!0),o=r.querySelector(".card__description"),a=r.querySelector(".card__image"),n=r.querySelector(".card__like-button"),i=r.querySelector(".card__delete-button");return y(e.name,o),q(a,e),e.isLiked&&n.classList.add("card__like-button_active"),n.addEventListener("click",(()=>{e.isLiked?t.deleteLike({cardId:e._id}).then(n.classList.toggle("card__like-button_active")).catch((e=>console.error(e))):t.addLike({cardId:e._id}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then(n.classList.toggle("card__like-button_active")).catch((e=>console.error(e)))})),i.addEventListener("click",(()=>{((e,t)=>{E=e,C=t._id,f(c.deleteCardModal)})(r,e)})),a.addEventListener("click",(()=>{q(p.modalImage,e),y(e.name,p.modalCaption),f(p.previewModal)})),r},k=(e,t,r,o)=>{e.textContent=t?r:o};const L=(()=>{const e=document.querySelector(".profile__button-edit"),t=document.querySelector("#edit-profile-modal"),r=document.forms["edit-profile"],o=r.elements.name,a=r.elements.description,n=r.querySelector(".modal__form-submit"),i=document.querySelector(".profile"),d=i.querySelector(".profile__name"),l=i.querySelector(".profile__description"),s=i.querySelector(".profile__picture"),u=document.querySelector("#edit-avatar-modal"),c=document.querySelector(".profile__avatar-button"),m=document.forms["edit-avatar"],p=m.elements.avatar,_=m.querySelector(".modal__form-submit");return{editProfileButton:e,editProfileModal:t,profileForm:r,profileNameInput:o,jobInput:a,editProfileSubmitButton:n,profile:i,profileNameElement:d,profileJobElement:l,profilePictureElement:s,editAvatarButton:c,editAvatarForm:m,editAvatarInput:p,editAvatarSubmitButton:_,editAvatarModal:u}})(),P=(()=>{const e=document.querySelector(".profile__button-new"),t=document.querySelector("#new-post-modal"),r=document.forms["new-post"],o=r.elements.caption,a=r.elements.link,n=r.querySelector(".modal__form-submit");return{newPostButton:e,newPostModal:t,addCardForm:r,captionInput:o,linkInput:a,addCardSubmitButton:n}})(),A=new class{constructor({baseUrl:e,token:t,contentType:r}){this._baseUrl=e,this._headers={authorization:t,"Content-Type":r}}_initializeRequest(){return fetch(`${this._baseUrl}${this._endpoint}`,{method:this._method,headers:this._headers,body:this._body?JSON.stringify(this._body):null})}_generateRequestOptions({endpoint:e,method:t,body:r=null}){this._endpoint=e,this._method=t,this._body=r}getUserInfo(){return this._generateRequestOptions({endpoint:"/users/me",method:"GET"}),this._initializeRequest()}updateProfileInfo({name:e,about:t}){return this._generateRequestOptions({endpoint:"/users/me",method:"PATCH",body:{name:e,about:t}}),this._initializeRequest()}updateAvatar({avatar:e}){return this._generateRequestOptions({endpoint:"/users/me/avatar",method:"PATCH",body:{avatar:e}}),this._initializeRequest()}getCards(){return this._generateRequestOptions({endpoint:"/cards",method:"GET"}),this._initializeRequest()}createCard({name:e,link:t}){return this._generateRequestOptions({endpoint:"/cards",method:"POST",body:{name:e,link:t}}),this._initializeRequest()}deleteCard({cardId:e}){return this._generateRequestOptions({endpoint:`/cards/${e}`,method:"DELETE"}),this._initializeRequest()}addLike({cardId:e}){return this._generateRequestOptions({endpoint:`/cards/${e}/likes`,method:"PUT"}),this._initializeRequest()}deleteLike({cardId:e}){return this._generateRequestOptions({endpoint:`/cards/${e}/likes`,method:"DELETE"}),this._initializeRequest()}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",token:"a30404cf-e968-457d-9272-e0540b733e36",contentType:"application/json"});L.editAvatarButton.addEventListener("click",(()=>{f(L.editAvatarModal)})),L.editAvatarForm.addEventListener("submit",(e=>{e.preventDefault(),k(L.editAvatarSubmitButton,!0,"Saving...","Save"),A.updateAvatar({avatar:L.editAvatarInput.value}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((()=>{q(L.profilePictureElement,{link:L.editAvatarInput.value,name:"Profile Picture"}),L.editAvatarForm.reset(),S(L.editAvatarModal)})).catch((e=>console.error(e))).finally((()=>{k(L.editAvatarSubmitButton,!1,"Saving...","Save")}))})),L.editProfileButton.addEventListener("click",(()=>{var e,r,a;f(L.editProfileModal),e=L.profileForm,r=i,a=L.editProfileSubmitButton,Array.from(e.querySelectorAll(r.inputSelector)).forEach((o=>{t(e,o,r)})),o(a,i.inactiveButtonClass),b(L.profileNameElement.textContent,L.profileNameInput),b(L.profileJobElement.textContent,L.jobInput)})),L.profileForm.addEventListener("submit",(e=>{e.preventDefault(),k(L.editProfileSubmitButton,!0,"Saving...","Save"),A.updateProfileInfo({name:L.profileNameInput.value,about:L.jobInput.value}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{_(e,L),S(L.editProfileModal)})).catch((e=>console.error(e))).finally((()=>{k(L.editProfileSubmitButton,!1,"Saving...","Save")}))})),P.newPostButton.addEventListener("click",(()=>{f(P.newPostModal)})),P.addCardForm.addEventListener("submit",(e=>{e.preventDefault(),k(P.addCardSubmitButton,!0,"Saving...","Save"),A.createCard({name:P.captionInput.value,link:P.linkInput.value}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{v(e,m.cardsContainer,A),P.addCardForm.reset(),r(P.addCardSubmitButton,i.inactiveButtonClass),S(P.newPostModal)})).finally((()=>{k(P.addCardSubmitButton,!1,"Saving...","Save")}))})),c.deleteCardForm.addEventListener("submit",(e=>{e.preventDefault(),k(c.deleteCardSubmitButton,!0,"Deleting...","Delete"),A.deleteCard({cardId:C}).then((e=>(e.ok&&(E.remove(),S(c.deleteCardModal)),Promise.reject(`Error: ${e.status}`)))).catch((e=>console.error(e))).finally((()=>{k(c.deleteCardSubmitButton,!1,"Deleting...","Delete")}))})),c.deleteCardForm.addEventListener("reset",(()=>S(c.deleteCardModal))),(()=>{const e=document.querySelector("#image-header"),t=document.querySelector("#image-pencil"),r=document.querySelector("#image-plus"),o=document.querySelector("#image-avatar-edit");[[e,d],[t,l],[r,s],[o,u]].forEach((e=>{(([e,t])=>{e.src=t})(e)}))})(),document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("mousedown",(t=>{(t.target===e||t.target.classList.contains("modal__button_type_close"))&&S(e)}))})),A.getUserInfo().then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{((e,t)=>{_(e,t),q(t.profilePictureElement,{link:e.avatar,name:e.name})})(e,L)})).catch((e=>{console.error(e)})),A.getCards().then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{if(!e.length)return console.log("no cards found");e.forEach((e=>{v(e,m.cardsContainer,A)}))})),n(i)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,